#include <WiFi.h>
#include <HTTPClient.h>
#include <time.h>

const int button_pin = 25;
bool button_last_state = HIGH;

const char* wifi_name = "Fake Extender"; 
const char* wifi_pass = "Aa1231325213!"; 
const char* url_server = "http://192.168.68.123:3000/presses"; //use your pc or laptop ip address

bool waitTimeForReconnecting() {
  for (int i = 0; i < 60; i++){
      if (WiFi.status() == WL_CONNECTED){
        Serial.println("Connected!");
        return true;
      }
    Serial.print(".");
    delay(1000);
    }

  Serial.println("\nReconnecting failed.");
  return false;
}

String getTimestamp() {
  struct tm time_info;

  int count = 30;
  while(count != 0){
    if (getLocalTime(&time_info)){
      break;
    }
    count --;
    delay(1000);
  }

  if (count == 0){
    Serial.println("Timestamp retrieval failed");
    return "Error in timestamp";
  }


  char buffer[30];
  strftime(buffer, sizeof(buffer), "%Y-%m-%dT%H:%M:%S", &time_info);
  return String(buffer);
}

void sendPost() {
  if (WiFi.status() != WL_CONNECTED) {
    Serial.print("Reconnecting to WiFi");
    WiFi.disconnect();
    WiFi.reconnect();
    
    if (!waitTimeForReconnecting()){
      return;
    }
  } 

    HTTPClient http;
    http.begin(url_server);
    http.addHeader("Content-Type", "application/json");

    String timestamp = getTimestamp();
    String json_data = "{\"device_id\":\"My esp32\",\"pressed_at\":\"" + timestamp + "\"}";

    int http_request_code = http.POST(json_data);
    Serial.print("Response: ");
    Serial.println(http_request_code);
    http.end();
}

void connectToWiFi(){
  Serial.println("Connecting to WiFi");
  WiFi.begin(wifi_name, wifi_pass);
  while (WiFi.status() != WL_CONNECTED){
    Serial.print(".");
    delay(500);
  }
  Serial.print("Connected to WiFi: ");
  Serial. println(wifi_name);
}

void setup() {
  Serial.begin(115200);
  pinMode(button_pin, INPUT_PULLUP);

  connectToWiFi();
  WiFi.RSSI();
  
  Serial.println("Getting PH time zone");
  configTime(8 * 3600, 0, "pool.ntp.org", "time.nist.gov");
  struct tm time_info;
  while (!getLocalTime(&time_info)){
    Serial.print(".");
    delay(500);
  }
  Serial.println("esp32 is ready");
}

void loop() {
  bool button_current_state = digitalRead(button_pin);

  if (button_current_state == LOW && button_last_state == HIGH){
    Serial.println("Request sent");
    sendPost();
    delay(10);
  }

  button_last_state = button_current_state;
}